import React, { useState, useEffect, } from 'react';
import PropTypes from 'prop-types';
import './MenuBar.scss';
import { menuCloseEvent } from './const';
import MenuTopElement, { MenuItemProps } from './MenuTopElement';
import PolyEvent from '../../polyfill/Event';
/**
 * MenuBar
 * The menu entrypoint. It requires the menu structure as a prop.
 * @param props the props to build the menu
 */
const MenuBar = (props) => {
    const { elements } = props;
    const [currentMenuIndex, setCurrentMenuIndex] = useState(-1);
    useEffect(() => {
        const onMenuClose = () => {
            setCurrentMenuIndex(-1);
        };
        const onDocClick = (event) => {
            const target = event.target;
            if (!target.closest('.MenuItem')) {
                setCurrentMenuIndex(-1);
            }
        };
        const onDocKeyDown = (event) => {
            // Not escape
            if (event.keyCode !== 27 || currentMenuIndex === -1) {
                return;
            }
            document.dispatchEvent(PolyEvent(menuCloseEvent));
        };
        document.addEventListener(menuCloseEvent, onMenuClose);
        document.addEventListener('click', onDocClick);
        document.addEventListener('keydown', onDocKeyDown);
        return () => {
            document.removeEventListener(menuCloseEvent, onMenuClose);
            document.removeEventListener('click', onDocClick);
            document.removeEventListener('keydown', onDocKeyDown);
        };
    }, [currentMenuIndex]);
    const changeMenuIndex = (index) => {
        if (currentMenuIndex === index) {
            return;
        }
        setCurrentMenuIndex(index);
    };
    return (React.createElement("div", { className: "MenuBar" }, elements.map((item, index) => (React.createElement(MenuTopElement, { key: item.name, menu: item, tabIndex: index, currentMenuIndex: currentMenuIndex, changeMenuIndex: changeMenuIndex })))));
};
// eslint-disable-next-line
// @ts-ignore
MenuBar.propTypes = {
    // eslint-disable-next-line
    elements: PropTypes.arrayOf(MenuItemProps).isRequired,
};
export default MenuBar;
//# sourceMappingURL=index.js.map