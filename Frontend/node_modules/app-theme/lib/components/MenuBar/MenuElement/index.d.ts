import React from 'react';
import PropTypes from 'prop-types';
export interface MenuElementDef {
    /**
     * The element's name. Must be unique per menu.
     */
    name: string;
    /**
     * The element's sub-elements
     */
    subElements?: MenuElementDef[];
    /**
     * Whether a tick should appear on the left (switch element)
     */
    isChecked?: boolean;
    /**
     * Arbitrary text to be placed to the right of the element's text
     */
    postText?: string;
    /**
     * If the element is a separator. If true, it won't render
     * eventual subElements nor show the tick on the left
     * or the text on the right
     */
    isSeparator?: boolean;
    /**
     * If it returns true, it will prevent the menu to close
     * upon pressing [enter] or clicking on the element
     */
    onClick?: (event: React.MouseEvent | React.KeyboardEvent) => boolean | void;
}
interface MenuElementProps {
    element: MenuElementDef;
    parentPath: string;
    tabIndex?: number;
    onClick?: (event: React.MouseEvent | React.KeyboardEvent) => boolean | void;
}
declare const MenuElement: React.FunctionComponent<MenuElementProps>;
export default MenuElement;
declare const MenuElementProps: PropTypes.Requireable<PropTypes.InferProps<{
    name: PropTypes.Validator<string>;
    isChecked: PropTypes.Requireable<boolean>;
    postText: PropTypes.Requireable<string>;
    isSeparator: PropTypes.Requireable<boolean>;
    subElements: PropTypes.Requireable<any[]>;
    onClick: PropTypes.Requireable<(...args: any[]) => any>;
}>>;
export { MenuElementProps };
//# sourceMappingURL=index.d.ts.map